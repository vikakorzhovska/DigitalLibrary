@using DigitalLibrary.Core.ViewModels
@model PaginationViewModel<DigitalLibrary.Core.Models.Genre>

@{
    ViewData["Title"] = "Genres";
}

<h1>Genres</h1>

<form method="get" asp-action="Index" class="mb-4">
    <input type="text" name="name" value="@Model.SearchTerm" placeholder="Search by genre name" class="form-control" />
    <button type="submit" class="btn btn-primary mt-2">Search</button>
</form>

<table class="table table-bordered">
    <thead>
        <tr><th>Genre Name</th><th>Actions</th></tr>
    </thead>
    <tbody>
        @foreach (var genre in Model.Items)
        {
            <tr>
                <td>@genre.Name</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@genre.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@genre.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@genre.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="Create" class="btn btn-success">Add New Genre</a>

@if (Model.TotalPages > 1)
{
    <nav class="mt-4">
        <ul class="pagination">
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-name="@Model.SearchTerm"
                       asp-route-page="@i">@i</a>
                </li>
            }
        </ul>
    </nav>
}


